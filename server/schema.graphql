type Query {
  product(id: ID!): Product
  products: [Product]
  brands: [Brand]
  categories: [Category]
  categoryFilter(name: String!): [Product]
  brandFilter(name: String!): [Product]
  productSizeStockApparel(id: ID!): ApparelSizeStock
  productSizeStockFootwear(id: ID!): FootwearSizeStock
  createUser(username: String!, email: String!, password: String!) : User
  userExist(email: String!): User
}

type Product {
  id: ID!
  brand: String
  name: String
  category: String
  color: String
  description: String
  price: Float
  images: [String]
}

type ApparelSizeStock {
  small: Int
  medium: Int
  large: Int
}

type FootwearSizeStock {
  id: ID!
  ten: Int
  eleven: Int
  twelve: Int
  thirteen: Int
}

type Category {
  id: ID!
  name: String
}

type Brand {
  id: ID!
  name: String
}

type User {
  id: ID!
  username: String
  email: String
  password: String
}